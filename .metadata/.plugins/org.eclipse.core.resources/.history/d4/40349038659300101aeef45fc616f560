spring.application.name=APIGatewayProject

#Explanation Of API Gateway

#----------This is we can do Mannualy Configuration For all MicroServices 
#spring.cloud.gateway.routes   -->This section defines routing rules for the API Gateway.
#A unique identifier for this route (used internally, good for debugging/logging)
#spring.cloud.gateway.routes[0].id=Micro-UserService

# lb:// = LoadBalancer.
# Tells Gateway to forward requests to the service named USER-SERVICE in the Eureka service registry.
# If multiple instances of USER-SERVICE exist, Gateway will load balance between them.
#spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE

# A predicate defines when this route is applied.
# Here: if the request path starts with /users/ (like /users/123), it will be routed to USER-SERVICE.
#spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/**

#FOr RATING-SERVICE
#spring.cloud.gateway.routes[0].id=Rating-Service
#spring.cloud.gateway.routes[0].uri=lb://RATING-SERVICE
#spring.cloud.gateway.routes[0].predicates[0]=Path=/rating-service/**
#--------------------------------------------------------------------------------------




#--------------------------------------------------------------------------------------
#Instead of Doing the Mannualy Configuration For EveryServices .... Dynamic Routing with Discovery Locator
#Spring Cloud Gateway can automatically create routes for every registered service.
spring.cloud.gateway.discovery.locator.enabled=true
#(or lowercase: /user-service/** if you enable lower-case-service-id).
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true





#-------------------------------------------
#Enable Gateway Debug Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.reactor.netty.http.server=DEBUG


